{
  "tests": [
    {
      "name": "render a string literal",
      "template": "{{ 'hello' }}",
      "result": "hello"
    },
    {
      "name": "render an integer literal",
      "template": "{{ 123 }}",
      "result": "123"
    },
    {
      "name": "render a negative integer literal",
      "template": "{{ -123 }}",
      "result": "-123"
    },
    {
      "name": "render a float literal",
      "template": "{{ 1.23 }}",
      "result": "1.23"
    },
    {
      "name": "render nil",
      "template": "{{ nil }}",
      "result": ""
    },
    {
      "name": "render a variable from the global namespace",
      "template": "{{ product.title }}",
      "data": {
        "product": {
          "title": "foo"
        }
      },
      "result": "foo"
    },
    {
      "name": "render a variable from the local namespace",
      "template": "{% assign name = 'Brian' %}{{ name }}",
      "result": "Brian",
      "tags": [
        "assign tag"
      ]
    },
    {
      "name": "render an undefined variable",
      "template": "{{ age }}",
      "result": ""
    },
    {
      "name": "render an undefined property",
      "template": "{{ product.age }}",
      "data": {
        "product": {
          "title": "foo"
        }
      },
      "result": ""
    },
    {
      "name": "access an array item by index",
      "template": "{{ product.tags[1] }}",
      "data": {
        "product": {
          "tags": [
            "sports",
            "garden"
          ]
        }
      },
      "result": "garden"
    },
    {
      "name": "access an array item by negative index",
      "template": "{{ product.tags[-2] }}",
      "data": {
        "product": {
          "tags": [
            "sports",
            "garden"
          ]
        }
      },
      "result": "sports"
    },
    {
      "name": "access array item by index stored in a local variable",
      "template": "{% assign i = 1 %}{{ product.tags[i] }}",
      "data": {
        "product": {
          "tags": [
            "sports",
            "garden"
          ]
        }
      },
      "result": "garden",
      "tags": [
        "assign tag"
      ]
    },
    {
      "name": "render a global variable with a filter",
      "template": "{{ product.title | upcase }}",
      "data": {
        "product": {
          "title": "foo"
        }
      },
      "result": "FOO",
      "tags": [
        "upcase filter"
      ]
    },
    {
      "name": "dump an array from the global context",
      "template": "{{ product.tags | join: '#' }}",
      "data": {
        "product": {
          "tags": [
            "sports",
            "garden"
          ]
        }
      },
      "result": "sports#garden",
      "tags": [
        "join filter"
      ]
    },
    {
      "name": "assign a variable the value of an existing variable",
      "template": "{% capture some %}hello{% endcapture %}{% assign other = some %}{% assign some = 'foo' %}{{ some }}-{{ other }}",
      "result": "foo-hello",
      "tags": [
        "assign tag",
        "capture tag"
      ]
    },
    {
      "name": "traverse variables with bracketed identifiers",
      "template": "{{ site.data.menu[include.menu][include.locale] }}",
      "data": {
        "site": {
          "data": {
            "menu": {
              "foo": {
                "bar": "it works!"
              }
            }
          }
        },
        "include": {
          "menu": "foo",
          "locale": "bar"
        }
      },
      "result": "it works!"
    },
    {
      "name": "render a default given a literal false",
      "template": "{{ false | default: 'bar' }}",
      "result": "bar",
      "tags": [
        "default filter"
      ]
    },
    {
      "name": "render a default given a literal false with 'allow false' equal to true",
      "template": "{{ false | default: 'bar', allow_false: true }}",
      "result": "false",
      "tags": [
        "default filter"
      ]
    },
    {
      "name": "render a default given a literal false with 'allow false' equal to false",
      "template": "{{ false | default: 'bar', allow_false: false }}",
      "result": "bar",
      "tags": [
        "default filter"
      ]
    },
    {
      "name": "unexpected left value for the `join` filter passes through",
      "template": "{{ 12 | join: '#' }}",
      "result": "12",
      "tags": [
        "join filter"
      ]
    },
    {
      "name": "render an output start sequence as a string literal",
      "template": "{{ '{{' }}",
      "result": "{{"
    },
    {
      "name": "access an undefined variable by index",
      "template": "{{ nosuchthing[0] }}",
      "result": ""
    },
    {
      "name": "render a range object",
      "template": "{{ (1..5) | join: '#' }}",
      "result": "1#2#3#4#5",
      "tags": [
        "join filter"
      ]
    },
    {
      "name": "render a range object that uses a float",
      "template": "{{ (1.4..5) | join: '#' }}",
      "result": "1#2#3#4#5",
      "tags": [
        "join filter"
      ]
    },
    {
      "name": "render a range object that uses an identifier",
      "template": "{{ (foo..5) | join: '#' }}",
      "data": {
        "foo": 2
      },
      "result": "2#3#4#5",
      "tags": [
        "join filter"
      ]
    },
    {
      "name": "reverse a range",
      "template": "{{ (foo..5) | reverse | join: '#' }}",
      "data": {
        "foo": 2
      },
      "result": "5#4#3#2",
      "tags": [
        "join filter",
        "reverse filter"
      ]
    },
    {
      "name": "chained bracketed identifier index",
      "template": "{{ products[0].title }}",
      "data": {
        "products": [
          {
            "title": "shoe"
          },
          {
            "title": "hat"
          }
        ]
      },
      "result": "shoe"
    },
    {
      "name": "chained bracketed identifier index no dot",
      "template": "{{ products[0]title }}",
      "data": {
        "products": [
          {
            "title": "shoe"
          },
          {
            "title": "hat"
          }
        ]
      },
      "tags": [
        "strict"
      ],
      "invalid": true
    },
    {
      "name": "chained identifier dot separated index",
      "template": "{{ products.0.title }}",
      "data": {
        "products": [
          {
            "title": "shoe"
          },
          {
            "title": "hat"
          }
        ]
      },
      "tags": [
        "strict"
      ],
      "invalid": true
    },
    {
      "name": "dot followed by bracket",
      "template": "{{ product.['title'] }}",
      "data": {
        "product": {
          "title": "shoe"
        }
      },
      "tags": [
        "strict"
      ],
      "invalid": true
    },
    {
      "name": "bracketed variable resolves to a string",
      "template": "{{ foo[something] }}",
      "data": {
        "foo": {
          "hello": "goodbye"
        },
        "something": "hello"
      },
      "result": "goodbye"
    },
    {
      "name": "bracketed variable resolves to a string without leading identifier",
      "template": "{{ [something] }}",
      "data": {
        "something": "hello",
        "hello": "goodbye"
      },
      "result": "goodbye"
    },
    {
      "name": "nested bracketed variable resolving to a string",
      "template": "{{ [list[settings.zero]] }}",
      "data": {
        "list": [
          "foo"
        ],
        "settings": {
          "zero": 0
        },
        "foo": "bar"
      },
      "result": "bar"
    },
    {
      "name": "quoted, bracketed variable name",
      "template": "{{ foo['bar'] }}",
      "data": {
        "foo": {
          "bar": 42
        }
      },
      "result": "42"
    },
    {
      "name": "quoted, bracketed variable name with whitespace",
      "template": "{{ foo['bar baz'] }}",
      "data": {
        "foo": {
          "bar baz": 42
        }
      },
      "result": "42"
    },
    {
      "name": "top-level quoted, bracketed variable name with whitespace",
      "template": "{{ ['bar baz'] }}",
      "data": {
        "bar baz": 42
      },
      "result": "42"
    },
    {
      "name": "top-level quoted, bracketed variable name with whitespace followed by dot notation",
      "template": "{{ ['bar baz'].qux }}",
      "data": {
        "bar baz": {
          "qux": 42
        }
      },
      "result": "42"
    },
    {
      "name": "whitespace between word and dot",
      "template": "{{ foo \n\t.bar }}",
      "data": {
        "foo": {
          "bar": 42
        }
      },
      "result": "42"
    },
    {
      "name": "whitespace between dot and word",
      "template": "{{ foo. \n\tbar }}",
      "data": {
        "foo": {
          "bar": 42
        }
      },
      "result": "42"
    },
    {
      "name": "whitespace between bracket notation",
      "template": "{{ ['foo'] \n\t['bar'] }}",
      "data": {
        "foo": {
          "bar": 42
        }
      },
      "result": "42"
    },
    {
      "name": "whitespace between words",
      "template": "{{ foo \n\tbar }}",
      "data": {
        "foo": {
          "bar": 42
        }
      },
      "tags": [
        "strict"
      ],
      "invalid": true
    },
    {
      "name": "double dot",
      "template": "{{ foo..bar }}",
      "data": {
        "foo": {
          "bar": 42
        }
      },
      "tags": [
        "strict"
      ],
      "invalid": true
    },
    {
      "name": "array index out of bounds",
      "template": "{{ a[3] }}",
      "data": {
        "a": [
          1,
          2,
          3
        ]
      },
      "result": ""
    },
    {
      "name": "negative array index out of bounds",
      "template": "{{ a[-4] }}",
      "data": {
        "a": [
          1,
          2,
          3
        ]
      },
      "result": ""
    }
  ]
}