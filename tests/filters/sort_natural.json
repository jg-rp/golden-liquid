{
  "tests": [
    {
      "name": "array of strings",
      "template": "{{ a | sort_natural | join: '#' }}",
      "data": {
        "a": [
          "b",
          "a",
          "C",
          "B",
          "A"
        ]
      },
      "result": "a#A#b#B#C",
      "tags": [
        "join filter",
        "sort_natural filter"
      ]
    },
    {
      "name": "array of strings with a nul",
      "template": "{% assign x = a | sort_natural %}{% for i in x %}{{ i }}{% unless forloop.last %}#{% endunless %}{% endfor %}",
      "data": {
        "a": [
          "b",
          "a",
          null,
          "C",
          "B",
          "A"
        ]
      },
      "result": "a#A#b#B#C#",
      "tags": [
        "assign tag",
        "for tag",
        "sort_natural filter",
        "unless tag"
      ]
    },
    {
      "name": "array of objects with a key",
      "template": "{% assign x = a | sort_natural: 'title' %}{% for obj in x %}{% for i in obj %}({{ i[0] }},{{ i[1] }}){% endfor %}{% endfor %}",
      "data": {
        "a": [
          {
            "title": "foo"
          },
          {
            "title": "bar"
          },
          {
            "title": "Baz"
          }
        ]
      },
      "result": "(title,bar)(title,Baz)(title,foo)",
      "tags": [
        "assign tag",
        "for tag",
        "sort_natural filter"
      ]
    },
    {
      "name": "array of objects with a key gets stringified",
      "template": "{% assign x = a | sort_natural: 'title' %}{% for obj in x %}{% for i in obj %}({{ i[0] }},{{ i[1] }}){% endfor %}{% endfor %}",
      "data": {
        "a": [
          {
            "title": 9
          },
          {
            "title": 1111
          },
          {
            "title": 87
          }
        ]
      },
      "result": "(title,1111)(title,87)(title,9)",
      "tags": [
        "assign tag",
        "for tag",
        "sort_natural filter"
      ]
    },
    {
      "name": "array of objects with a missing key",
      "template": "{% assign x = a | sort_natural: 'title' %}{% for obj in x %}{% for i in obj %}({{ i[0] }},{{ i[1] }}){% endfor %}{% endfor %}",
      "data": {
        "a": [
          {
            "title": "foo"
          },
          {
            "title": "bar"
          },
          {
            "heading": "Baz"
          }
        ]
      },
      "result": "(title,bar)(title,foo)(heading,Baz)",
      "tags": [
        "assign tag",
        "for tag",
        "sort_natural filter"
      ]
    },
    {
      "name": "argument is undefined",
      "template": "{% assign x = a | sort_natural: nosuchthing %}{% for obj in x %}{% for i in obj %}({{ i[0] }},{{ i[1] }}){% endfor %}{% endfor %}",
      "data": {
        "a": [
          {
            "title": "foo"
          },
          {
            "title": "bar"
          },
          {
            "title": "Baz"
          }
        ]
      },
      "result": "(title,bar)(title,Baz)(title,foo)",
      "tags": [
        "assign tag",
        "for tag",
        "sort_natural filter"
      ]
    },
    {
      "name": "empty array",
      "template": "{% assign x = a | sort_natural %}{% for i in x %}{{ i }}{% unless forloop.last %}#{% endunless %}{% endfor %}",
      "data": {
        "a": []
      },
      "result": "",
      "tags": [
        "assign tag",
        "for tag",
        "sort_natural filter",
        "unless tag"
      ]
    },
    {
      "name": "left value is not an array",
      "template": "{{ a | sort_natural }}",
      "data": {
        "a": 123
      },
      "result": "123",
      "tags": [
        "sort_natural filter"
      ]
    },
    {
      "name": "left value is undefined",
      "template": "{{ nosuchthing | sort_natural }}",
      "result": "",
      "tags": [
        "sort_natural filter"
      ]
    },
    {
      "name": "incompatible types",
      "template": "{{ a | sort_natural }}",
      "data": {
        "a": [
          {},
          1,
          "4"
        ]
      },
      "result": "14{}",
      "tags": [
        "sort_natural filter"
      ]
    }
  ]
}